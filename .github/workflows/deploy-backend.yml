name: Deploy Backend

on:
  push:
    branches: [main, master]
    paths:
      - 'api/**'
      - '.github/workflows/deploy-backend.yml'
  pull_request:
    branches: [main, master, develop]
    paths:
      - 'api/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Service Account Key File
        run: echo '${{ secrets.GCP_SA_KEY }}' > gcp-sa-key.json

      - name: Authenticate to Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=gcp-sa-key.json
          gcloud config set project aa-dashboard-457316
          # 認証情報が維持されるようにするための対策
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-sa-key.json" >> $GITHUB_ENV

      - name: Check GCloud Auth Status
        shell: bash
        run: |
          echo "--- 1. Check Active Account ---"
          gcloud auth list
          echo "--- 2. Check Credentials Environment Variable ---"
          echo "GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS"
          ls -la $GOOGLE_APPLICATION_CREDENTIALS

      - name: Deploy to Cloud Run
        env:
          REGION: 'asia-northeast1'
          BACKEND_SERVICE_NAME: 'backend-api'
          PAYMASTER_ADDRESS: '0x415b4ceC5cf512CeDBE09C12081A0b75E13854Ff'
        run: |
          # デプロイ前に再度認証を明示的に行う
          gcloud auth activate-service-account --key-file=gcp-sa-key.json
          gcloud config set project aa-dashboard-457316

          NON_SECRET_ENV_VARS="NODE_ENV=production,PAYMASTER_ADDRESS=${PAYMASTER_ADDRESS}"
          SECRET_VARS="ALCHEMY_API_KEY=ALCHEMY_API_KEY:latest,PAYMASTER_PRIVATE_KEY=PAYMASTER_PRIVATE_KEY:latest"

          echo "Deploying to Cloud Run: ${BACKEND_SERVICE_NAME}"
          gcloud run deploy ${BACKEND_SERVICE_NAME} \
            --project=aa-dashboard-457316 \
            --source ./api \
            --region ${REGION} \
            --platform managed \
            --allow-unauthenticated \
            --port 4000 \
            --update-env-vars "${NON_SECRET_ENV_VARS}" \
            --update-secrets="${SECRET_VARS}"

      - name: Cleanup
        if: always()
        run: rm -f gcp-sa-key.json
